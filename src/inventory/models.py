"""
Inventory Model
"""
from django.db import models
from django.utils.translation import ugettext_lazy as _
from django.contrib.postgres.fields import (ArrayField, JSONField,)
from cultivar.models import (Cultivar, )
from labtest.models import (LabTest, )
from user.models import (User, )
from core.mixins.models import (TimeStampFlagModelMixin, )


class Inventory(models.Model):
    """
    Inventory Model Class
    """
    cultivar = models.ForeignKey(Cultivar, verbose_name=_('Cultivar'), blank=True, null=True,
                                related_name='cultivar', on_delete=models.PROTECT)
    labtest = models.ForeignKey(LabTest, verbose_name=_('LabTest'), blank=True, null=True,
                                related_name='labtest', on_delete=models.PROTECT)
    created_time = models.DateTimeField(auto_now=False)
    last_modified_time = models.DateTimeField(auto_now=False)
    item_id = models.CharField(_('Item ID'), primary_key=True, max_length=50)
    item_type = models.CharField(_('Item Type'), blank=True, null=True, max_length=50)
    name = models.CharField(_('Name'), max_length=255)
    sku = models.CharField(_('SKU'), blank=True, null=True, max_length=100, db_index=True)
    image_name = models.CharField(_('Image Name'), blank=True, null=True, max_length=100)
    image_type = models.CharField(_('Image Type'), blank=True, null=True, max_length=50)
    manufacturer = models.CharField(_('Manufracturer'), blank=True, null=True, max_length=100)
    category_name = models.CharField(_('Category Name'), max_length=50)
    category_id = models.CharField(_('Category ID'), blank=True, null=True, max_length=50)
    vendor_name = models.CharField(_('Vendor Name'), blank=True, null=True, max_length=255)
    unit = models.CharField(_('Unit'), blank=True, null=True, max_length=20)
    status = models.CharField(_('Status'), blank=True, null=True, max_length=20)
    zcrm_product_id = models.CharField(_('CRM Product ID'), blank=True, null=True, max_length=50)
    is_combined_product = models.BooleanField(_('Is Combined Product'))
    account_id = models.CharField(_('Account ID'), blank=True, null=True, max_length=50)
    account_name = models.CharField(_('Account Name'), blank=True, null=True, max_length=50)
    description = models.TextField(_('Description'), blank=True, null=True)
    brand = models.CharField(_('Brand'), blank=True, null=True, max_length=50)
    price = models.FloatField(_('Price'))
    purchase_rate = models.FloatField(_('Purchase Rate'))
    tax_id = models.CharField(_('Tax ID'), blank=True, null=True, max_length=50)
    tax_name = models.CharField(_('Tax Name'), blank=True, null=True, max_length=50)
    tax_type = models.CharField(_('Tax Type'), blank=True, null=True, max_length=50)
    tax_percentage = models.FloatField(_('Tax Percentage'))
    purchase_account_name = models.CharField(_('Purchase Account Name'), blank=True, null=True, max_length=255)
    product_type = models.CharField(_('Product Type'), blank=True, null=True, max_length=100)
    is_taxable = models.BooleanField(_('Is Taxable'))
    is_returnable = models.BooleanField(_('Is Returnable'))
    tax_exemption_code = models.CharField(_('Tax Excemption Code'), blank=True, null=True, max_length=100)
    total_initial_stock = models.FloatField(_('Total Initial Stock'), blank=True, null=True)
    stock_on_hand = models.FloatField(_('Stock On Hand'), blank=True, null=True)
    available_stock = models.FloatField(_('Availabe Stock'), blank=True, null=True)
    cf_strain_name = models.CharField(_('Strain Name'), blank=True, null=True, max_length=255)
    cf_cultivation_type = models.CharField(_('Cultivation Type'), blank=True, null=True, max_length=100)
    cf_cannabis_grade_and_category = models.CharField(_('Cannabis Grade and Category'), blank=True, null=True, max_length=100)
    cf_client_code = models.CharField(_('Client Code'), blank=True, null=True, max_length=50)
    cf_lab_file = models.URLField(_('Lab File'), blank=True, null=True, max_length=255)
    cf_pending_sale = models.CharField(_('Pending Sale'), blank=True, null=True, max_length=255)
    cf_cultivar_type = models.CharField(_('Cultivar Type'), blank=True, null=True, max_length=50)
    cf_procurement_rep = models.CharField(_('Procurement Rep'), blank=True, null=True, max_length=50)
    cf_cfi_published = models.BooleanField(_('CFI_Published'), blank=True, null=True)
    cf_ifp_farm = models.BooleanField(_('IFP_Farm'), blank=True, null=True)
    cf_vendor_name = models.CharField(_('Vendor Name'), blank=True, null=True, max_length=50)
    cf_procurement_confirmed = models.CharField(_('PnC'), blank=True, null=True, max_length=50)
    cf_marge_per_unit = models.FloatField(_('Margin Per Unit'), blank=True, null=True)
    cf_lpn = models.CharField(_('LPN'), blank=True, null=True, max_length=50)
    cf_received_date = models.CharField(_('Received Date'), blank=True, null=True, max_length=50)
    cf_pending_sale_1_1 = models.CharField(_('Pending Sale 1'), blank=True, null=True, max_length=100)
    cf_pending_sale_2 = models.CharField(_('Pending Sale 2'), blank=True, null=True, max_length=100)
    cf_pending_sale_3 = models.CharField(_('Pending Sale 3'), blank=True, null=True, max_length=100)
    cf_metrc_manifest_number = models.TextField(_('Metrc Manifest Number'), blank=True, null=True)
    cf_harvest = models.CharField(_('Harvest'), blank=True, null=True, max_length=50)
    cf_metrc_packages = models.TextField(_('Metrc Package'), blank=True, null=True)
    cf_payment_terms = models.CharField(_('Payment Terms'), blank=True, null=True, max_length=255)
    cf_lab_test_link = models.URLField(_('Lab Test Link'), blank=True, null=True, max_length=255)
    cf_testing_type = ArrayField(models.CharField(max_length=50), blank=True, null=True)
    cf_pesticide_summary = models.CharField(_('Pesticide Summary'), blank=True, null=True, max_length=255)
    cf_farm_price = models.FloatField(_('Farm Price'), blank=True, null=True)
    cf_next_harvest_date = models.DateField(auto_now=False, blank=True, null=True, default=None)
    purchase_account_id = models.CharField(_('Purchase Account Id'), blank=True, null=True, max_length=100)
    inventory_account_id = models.CharField(_('Inventory Account Id'), blank=True, null=True, max_length=100)
    inventory_account_name = models.CharField(_('Inventory Account Name'), blank=True, null=True, max_length=100)
    tags = ArrayField(models.CharField(max_length=50), blank=True, null=True)
    available_for_sale_stock = models.FloatField(_('Available For Sale Stock'), blank=True, null=True)
    actual_available_for_sale_stock = models.FloatField(_('Actual Available For Sale Stock'), blank=True, null=True)
    actual_available_stock = models.FloatField(_('Actual Available For Sale Stock'), blank=True, null=True)
    cf_manufacturing_date = models.DateField(auto_now=False, blank=True, null=True, default=None)
    cf_batch_blending = models.CharField(_('Batch Blending'), blank=True, null=True, max_length=100)
    cf_lab_testing_status = models.URLField(_('Lab Testing Status'), blank=True, null=True, max_length=255)
    cf_qa_intake_grading_sheet_id = models.CharField(_('Qa Intake Grading Sheet Id'), blank=True, null=True, max_length=100)
    cf_administrative_hold = models.CharField(_('Administrative Hold'), blank=True, null=True, max_length=100)
    cf_batch_notes = models.TextField(_('Batch Notes'), blank=True, null=True)
    cf_lab_test_results_box_url = models.URLField(_('Lab Test Results Box Url'), blank=True, null=True, max_length=255)
    track_batch_number = models.CharField(_('Track Batch Number'), blank=True, null=True, max_length=100)
    cf_date_available = models.DateField(auto_now=False, blank=True, null=True, default=None)
    cf_status = models.CharField(_('Status'), blank=True, null=True, max_length=100)
    cf_lab_test_sample_id = models.CharField(_('cf_lab_test_sample_id'), blank=True, null=True, max_length=100)
    cf_quantity_estimate = models.FloatField(_('cf_quantity_estimate'), blank=True, null=True)
    cf_metrc_source_package_id = models.CharField(_('cf_metrc_source_package_id'), blank=True, null=True, max_length=100)
    cf_market_feedback = models.TextField(_('cf_market_feedback'), blank=True, null=True)
    package_details = JSONField(blank=True, null=True, default=dict)
    documents = ArrayField(models.CharField(max_length=255), blank=True, null=True)
    batches = ArrayField(JSONField(default=dict), blank=True, null=True)
    
    def __str__(self):
        return self.name
    

class ItemFeedback(TimeStampFlagModelMixin, models.Model):
    """
    Inventory item feedbacks by user.
    """
    user = models.ForeignKey(User, verbose_name=_('User'), related_name='user', on_delete=models.PROTECT)
    item = models.CharField(_('item_id'), blank=True, null=True, max_length=100)
    feedback = models.TextField(_('feedback'))
    estimate_number = models.CharField(_('Estimate Number'), blank=True, null=True, max_length=100)