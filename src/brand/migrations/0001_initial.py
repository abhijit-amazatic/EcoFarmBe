# Generated by Django 2.2 on 2020-09-05 13:54

from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('brand_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Brand Name')),
                ('brand_category', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=255), blank=True, default=list, null=True, size=None)),
                ('brand_county', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=255), blank=True, default=list, null=True, size=None)),
                ('appellation', models.CharField(blank=True, max_length=255, null=True, verbose_name='Brand Appellation')),
                ('ethics_and_certification', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=255), blank=True, default=list, null=True, size=None)),
                ('about_brand', models.TextField(blank=True, null=True)),
                ('interested_in_co_branding', models.BooleanField(default=False, verbose_name='Is Interested In Co-Branding')),
                ('have_marketing', models.BooleanField(default=False, verbose_name='Have marketing')),
                ('featured_on_our_site', models.BooleanField(default=False, verbose_name='Interested In Featured on Our Site')),
                ('profile_category', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=255), blank=True, default=list, null=True, size=None)),
                ('is_buyer', models.BooleanField(default=False, verbose_name='Is Buyer/accounts')),
                ('is_seller', models.BooleanField(default=False, verbose_name='Is Seller/Vendor')),
                ('ac_manager', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='manages', to=settings.AUTH_USER_MODEL, verbose_name='Account Manager')),
                ('parent_brand', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='brand.Brand')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('license_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='License Type')),
                ('owner_or_manager', models.CharField(blank=True, max_length=12, null=True, verbose_name='Owner or Manager')),
                ('legal_business_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Legal Business Name')),
                ('license_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='License Number')),
                ('expiration_date', models.DateField(blank=True, default=None, null=True, verbose_name='Expiration Date')),
                ('issue_date', models.DateField(blank=True, default=None, null=True, verbose_name='Issue Date')),
                ('premises_address', models.TextField()),
                ('premises_county', models.CharField(blank=True, max_length=255, null=True, verbose_name='Premises County')),
                ('premises_city', models.CharField(blank=True, max_length=255, null=True, verbose_name='Premises City')),
                ('zip_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Premises Zip')),
                ('premises_apn', models.CharField(blank=True, max_length=255, null=True, verbose_name='Premises APN')),
                ('premises_state', models.CharField(blank=True, max_length=255, null=True, verbose_name='Premises State')),
                ('uploaded_license_to', models.CharField(blank=True, max_length=255, null=True, verbose_name='Uploaded To')),
                ('uploaded_sellers_permit_to', models.CharField(blank=True, max_length=255, null=True, verbose_name='Uploaded Sellers Permit To')),
                ('uploaded_w9_to', models.CharField(blank=True, max_length=255, null=True, verbose_name='Uploaded W9  To')),
                ('associated_program', models.CharField(blank=True, max_length=255, null=True, verbose_name='Associated_program')),
                ('profile_category', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=255, verbose_name='This is for Individual user'), blank=True, default=list, null=True, size=None)),
                ('is_buyer', models.BooleanField(default=False, verbose_name='Is Buyer/accounts(if individual user)')),
                ('is_seller', models.BooleanField(default=False, verbose_name='Is Seller/Vendor(if individual user)')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='brand.Brand', verbose_name='Brand')),
                ('created_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Individual User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProfileCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Vendor/Profile Category',
                'verbose_name_plural': 'Vendor/Profile Categories',
            },
        ),
        migrations.CreateModel(
            name='ProgramOverview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('program_details', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('is_draft', models.BooleanField(default=False, verbose_name='Is Draft')),
                ('license', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='program_overview', to='brand.License', verbose_name='License')),
            ],
        ),
        migrations.CreateModel(
            name='ProfileContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_contact_details', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('is_draft', models.BooleanField(default=False, verbose_name='Is Draft')),
                ('license', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile_contact', to='brand.License', verbose_name='LicenseProfile')),
            ],
        ),
        migrations.CreateModel(
            name='LicenseProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('farm_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Farm Name')),
                ('farm_county', models.CharField(blank=True, max_length=255, null=True, verbose_name='Farm County')),
                ('appellation', models.CharField(blank=True, max_length=255, null=True, verbose_name='Appellation')),
                ('region', models.CharField(blank=True, max_length=255, null=True, verbose_name='Region')),
                ('ethics_and_certification', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=255), blank=True, default=list, null=True, size=None)),
                ('product_of_interest', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=255), blank=True, default=list, null=True, size=None)),
                ('cultivars_of_interest', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=255), blank=True, default=list, null=True, size=None)),
                ('about', models.TextField(blank=True, null=True)),
                ('other_distributors', models.BooleanField(default=False, verbose_name='Work With Other distributors')),
                ('transportation', models.BooleanField(default=False, verbose_name='Have Transportation')),
                ('issues_with_failed_labtest', models.BooleanField(default=False, verbose_name='Issues With Failed Lab tests')),
                ('preferred_payment', models.CharField(blank=True, max_length=255, null=True, verbose_name='Preferred Payment')),
                ('approved_on', models.DateTimeField(blank=True, null=True, verbose_name='Approved on')),
                ('approved_by', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, null=True, verbose_name='Approved by')),
                ('agreement_signed', models.BooleanField(default=False, verbose_name='Is Agreement Signed')),
                ('agreement_link', models.CharField(blank=True, max_length=100, null=True, verbose_name='Box Agreement Link')),
                ('brand_association', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='brand.Brand', verbose_name='Brand')),
                ('license', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='farm_profile', to='brand.License', verbose_name='LicenseProfile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FinancialOverview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('know_annual_budget', models.BooleanField(default=False, verbose_name='Is Agreement Signed')),
                ('annual_budget', models.CharField(blank=True, max_length=255, null=True, verbose_name='Annual Budget')),
                ('mixed_light', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, null=True)),
                ('outdoor_autoflower', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, null=True)),
                ('outdoor_full_season', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, null=True)),
                ('indoor', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, null=True)),
                ('is_draft', models.BooleanField(default=False, verbose_name='Is Draft')),
                ('license', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='financial_overview', to='brand.License', verbose_name='License')),
            ],
        ),
        migrations.CreateModel(
            name='CultivationOverview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('autoflower', models.BooleanField(default=False, verbose_name='Is Agreement Signed')),
                ('full_season', models.BooleanField(default=False, verbose_name='Is Agreement Signed')),
                ('lighting_type', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=255), blank=True, default=list, null=True, size=None)),
                ('type_of_nutrients', models.CharField(blank=True, max_length=255, null=True, verbose_name='Type of Nutrients')),
                ('mixed_light', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, null=True)),
                ('indoor', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, null=True)),
                ('outdoor_full_season', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, null=True)),
                ('outdoor_autoflower', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, null=True)),
                ('license', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cultivation_overview', to='brand.License', verbose_name='License')),
            ],
        ),
        migrations.CreateModel(
            name='CropOverview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('process_on_site', models.BooleanField(default=False)),
                ('need_processing_support', models.BooleanField(default=False)),
                ('mixed_light', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, null=True)),
                ('outdoor_autoflower', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, null=True)),
                ('outdoor_full_season', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, null=True)),
                ('indoor', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, null=True)),
                ('is_draft', models.BooleanField(default=False, verbose_name='Is Draft')),
                ('license', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='crop_overview', to='brand.License', verbose_name='License')),
            ],
        ),
        migrations.CreateModel(
            name='LicenseUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('role', models.CharField(choices=[('owner', 'Owner'), ('license_owner', 'License Owner'), ('farm_manager', 'Farm Manager'), ('logistics', 'Logistics'), ('sales_or_inventory', 'Sales or Inventory'), ('billing', 'Billing')], max_length=60, verbose_name='Role')),
                ('license', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_roles', to='brand.License', verbose_name='License')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_roles', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'License Profile User',
                'unique_together': {('license', 'user')},
            },
        ),
    ]
